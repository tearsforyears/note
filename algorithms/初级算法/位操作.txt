	public static void main(String[] args) {
		int a=3;
		int b=4;
		System.out.println(b^=a^=b^=a^=b);
		//a^=b 后的情况a=7 b=4
		//b^=a^=b 后的情况a=7 b=3
		//a^=b^=a^=b 后的情况 a=0 b=3
		//b^=a^=b^=a^=b 后的情况 a=0 b=4
		System.out.println(""+a+b);
	}
//在看gcd的时候发现网上的一个bug
//利用赋值表达式的这个特点我们能干一些固定的工作
//但对于一般计算来说 
!!!!!!!!!!!!!!!!!!!!赋值表达式不允许出现2次相同的变量!!!!!!!!!!!!!!!!!!!!!!!
以下这种情况 说明赋值表达式的原理 a b的值没有立即发生改变 也就是说
编译器优化可能是把值先给你算出来(记录表达式的值)然后从内向外赋值
此时引用的是全局的变量 而不是表达式内部赋值的量 
"""
位运算的用途
极限优化 疯狂加速程序
"""
"""swap a and b"""
a=3
b=4
print a,b
a=a^b
b=b^a
a=a^b
print a,b

""" is a EVEN NUMBER？"""
print 100%2
print 100&1
""" 如果4是 2的倍数 可以加速取余数"""
print 10%4
print 10&3

print 123456789*4
print 123456789<<2
for i in range(10):
    print 123456789>>i," ",