动态规划问题总结
关于这一系列动态规划问题
都要通过一张二维表去解决
______________________________________________
  变量1的值| a   b  c  d  e  f  g  h   i   j
变量2的值  |___________________________________
    a      |
    b      |两值交汇处是问题的答案
    c      |
    d      |
    e      |
    f      |
    g      |
    h      |
如果问题本身的值太多可以建立三维表
如果问题本身的值不够 需要自己去寻找或者说是建立变量二的值
最优子结构的却可以让问题的复杂度降低很多很多
但更一般的结构是去掉一个值和自身比较的情况
上述表的话 一般完整写出来对空间复杂度的提升很大
所以利用一行(这个是广义的一行)
(这个一行值得是遍历光标这行的前一行)
(同时可以利用的数据是本身这行 或者行表头 列表头a b c等)
这些数据的使用可以解决问题本身也可以大大降低空间复杂度
用好慎用
ACM

参考
递归函数有n个参数，就定义一个n维的数组，数组的下标是递归函数参数的取值范围，数组元素的值是递归函数的返回值，这样就可以从边界值开始， 逐步填充数组，相当于计算递归函数值的逆过程。
每个阶段只有一个状态->递推；每个阶段的最优状态都是由上一个阶段的最优状态得到的->贪心；每个阶段的最优状态是由之前所有阶段的状态的组合得到的->搜索；每个阶段的最优状态可以从之前某个阶段的某个或某些状态直接得到而不管之前这个状态是如何得到的->动态规划。

作者：王勐
链接：https://www.zhihu.com/question/23995189/answer/35429905
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

每个阶段的最优状态可以从之前某个阶段的某个或某些状态直接得到
这个性质叫做最优子结构；
而不管之前这个状态是如何得到的
这个性质叫做无后效性。

动态规划常见的模型有4大类：
线性模型 公共子序列LCS 最长递增序列LIS 以及他们加强版
树型模型 有待进一步接触
区间模型 区间dp一般根据起点终点设置二维结构 注意中间断点
01背包问题 金矿问题 特别需要注意遍历时候的区间

动态规划子问题最优是关键
存储换来的是把复杂度下降
