matplotlib
import numpy as np
import matplotlib.pyplot as plt
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
基础

最核心函数
plt.plot()
plt.show()

plot(y)				参数表
plot(x,y)		b g r c m y k(black) w cyan magenta
plot(x,y,format_str)	- -- -. : . , o v ^< >1 2 3 4 s p *
plot(y,format_str)	h H + x D d _
plot(x,y,linewidth=2.0,color='r')

plt.axis([xmin,xmax,ymin,ymax])
//指定坐标
line,=plt.plot(x,y,'r-')
lines=plt.plot(x,y)
line.set_antialiased(False)//关闭抗锯齿化
plt.setp(lines,'color','r','linewidth',2.0)//修改线条性质

子图
plt.figure(num)//产生几幅图(是几次)
plt.subplot(numrows,numcols,fignum)//占据多少行列,在第几幅图产生
当numrows*numcols>10时 中间逗号可以省略

直方图
plt.hist()
n, bins, patches = plt.hist(x, 50, normed=1, facecolor='g', alpha=0.75)

plt.grid()//网格
plt.text() //显示一行文字
plt.annotate(text,xy=(2,1)，xytext=(3,1.5))//显示文字
//文字内容，注释位置，文本位置
ylim//限制y的上下的 在实际操作可以用axis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
风格
import matplotlib as plt
import numpy as numpy

plt.style.available //查看所有style
plt.style.use('ggplot') //模仿R语言中的ggplot风格
//['dark_background', 'ggplot'] 可以使用混合搭配 但是右边会覆盖

//如果只希望改变部分风格的话
with plt.style.context(('dark_background')):
    plt.plot(x,y,'r-o')
    plt.show()
事实上我们还可以使用自定义风格文件
matplotlib/mpl_configdir/stylelib/
里面的问及那 .mplstyle结尾的文件 presentation.mplstyle
里面的内容以key-value的形式保存

plt.style.use('presentation')
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
处理文本(基础)
//可以通过$E=mc^2$插入tex数学公式
text()//指定文职添加文本
xlabel()
ylabel()
title()
figtext()
figtext()
suptitle()
annotate()//为一个点去添加文本

//可以通过一些属性去改变文本属性比如color

import matplotlib.patches as patches

fig=plt.figure(figsize=(10,7))
ax=fig.add_axes([0,0,1,1])

p=patches.Rectangle(
    (left,bottom),width,height,
    fill=False,transform=ax.tranAxes,cilp_on=False
)
xycoords和textcoords来设置不同的坐标系
极坐标系 subplot:polar=True
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
数学表达式的文本处理
通常使用r''来避免tex数学表达式的转义
alpha beta omega

上下标:
用^和_分别来表示上下标

∑相关:
希腊字母可以用\+字母名来显示
$\sum_{i=0}^\infty x_i$       //{}里面的内容属于一个部分
\infty代表无穷大


分数，二项式系数，stacked number
$frac{3}{4}$         // 3/4
$\binom{3}{4}$	     //组合数在概率论的写法 注意反过来的
$\stackrel{3}{4}$    //组合数没有括号 数字堆积
//binom 是二项分布的意思

括号:
在tex中,括号始终是默认大小如果想用内部括号
\left \right 分别表示对应大小的左右括号

根号:
r'$\sqrt{3}{x}$'
// \sqrt 代表根号 第一个参数是开几次根号,第二个是表达式

特殊字体
\mathrm{} //{}可选Roman(默认) Italic Typewriter CALLIGRAPHY

音调
\bar a \acute a \breve a \grave a 普通话四声
\dot a \ddot a  点 
\hat a //i hat and j hat
\4vec a //向量
\overline{} \widehat{} \widetilde{} 波浪线
.........

特殊字母表
http://matplotlib.org/users/mathtext.html#symbols
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


图像基础
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np

plt.imshow(mpimg.imread('path'))


//matplotlib默认支持png格式的图片
img = mpimg.imread('path')
img.shape //得到一个像素数组 最后一个3表示RGB的配值
plt.imshow(img).set_cmap('hot') //设置色调

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

