Canvas
<canvas id width height></>
<script>
    ctx=canvasIdInstance.getContext("2d");//不支持3d！！
    ctx.fillStyle //填充风格 比如颜色
    ctx.fillRect(x,y,width,height)
</>
//填充矩形
ctx.fillSytle='red'
ctx.fillRect(0,0,150,75)//location and shape
ctx.clearRect()//相当于橡皮擦擦去这个矩形内所有像素
//另一种填充矩形的方法
ctx.rect() //创建矩形
ctx.fill()
//多形状共存
ctx.beginPath()
ctx.stoke()
//返回远点
ctx.closePath();
//裁剪 从原本画布上切一块下来对切的这一块重新建立坐标系
ctx.rect(50,20,200,120);
ctx.stroke();
ctx.clip();
//划线
ctx.moveTo(0,0)//指定原点
ctx.lineTo(200,100)//到这个点去
ctx.lineTo(100，50)//到这个点去 //也就是说起始点是200，100
ctx.stroke() //划掉
ctx.beginPath();
ctx.lineCap="round"; //让两端变成光滑 square方形 butt默认
ctx.lineJoin="round"; //两根线交汇处
ctx.linwidth=10 //线粗10px
//画矩形
ctx.strokeRect(x,y,width,height)//画出正方形
//圆
ctx.beginPath();
ctx.arc(95,50,40,0,2*Math.PI); 
ctx.arcTo(150,20,150,70,50); //从150，20到150，70 半径50
//x,y,r,start,stop 逆时针画圆
ctx.stroke()
//文本
c.getContext('2d')//这画的是立体字
ctx.font='30px Arial'
ctx.fillText('Hello World',10,50)
*********************************************************
//渐变//
createLinearGradient //线性渐变
createRadialGradient //径向渐变 圆渐变
var grd=ctx.createLinearGradient(0,0,200,0)//线性渐变
//0,0--->200,0
grd.addColorStop(0,"red")
grd.addColorStop(1,"white")
//设置渐变停止 01可改变
ctx.fillStyle=grd;//设置fillStyle
ctx.fillRect(10,10,150,80);
//线性渐变的大小和方向指示颜色渐变的快慢然后截取一段
//渐变笔触//
var gradient=ctx.createLinearGradient(0,0,170,0);
gradient.addColorStop("0","magenta");
gradient.addColorStop("0.5","blue");
gradient.addColorStop("1.0","red"); //三种颜色的渐变
//透明度
ctx.globalAlpha=0.2;

ctx.stokeStyle=gradient;//指定风格
**渐变笔触指定文字很好看***
ctx.font="30px Verdana";
var gradient=ctx.createLinearGradient(0,0,c.width,0);
gradient.addColorStop("0","magenta");
gradient.addColorStop("0.5","blue");
gradient.addColorStop("1.0","red");
//指定风格
ctx.strokeStyle=gradient;
ctx.strokeText("Big smile!",10,50);
************************************************************
//图片//
var img=document.getElementById('imgTagID')
ctx.drawImage(img,10,10)
var img=ctx.createImageData(100,100) //100*100像素的
img.data[3]=100 //透明度为100/255
//img.data是个数组有四个值rgba 红绿蓝然后透明度
ctx.putImageData(imgData,10,10)//放在哪个点
ctx.getImageData(x,y,width.height)//得到那个点开始的像素数组
//阴影//
ctx.shadowBlur=20
ctx.shadowOffsetX=20;//阴影位移 向右
ctx.shadowOffsetY=20; //阴影位移 向下 //符合该坐标系的方向
ctx.shadowColor='black' //指定阴影 20px
//重复图像//
ctx.createPattern(img,direction)//direction可以指定几个值
//repeat（全屏重复） repeat-x repeat-y no-repeat //单个
*******************************************************
贝塞尔曲线 //绘制光滑曲线
ctx.moveTo(20,20);
ctx.quadraticCurveTo(20,100,200,20);//控制点和 终点
ctx.bezierCurveTo(20,100,200,100,200,20); 
//绘制三次贝塞尔曲线，两个控制点 终点
判断某一点是否在ctx的路径中
ctx.isPointInPath(20,50)
*********************************************************
//线性变换
ctx.scale(width,height)//把宽度的高度放大
ctx.rotate(20/180*Math.PI)
ctx.translate(70,70)//把上一个图形的坐标移动 +70，+70
ctx.tranfrom()//矩阵变换 想想opencv里面的那个2*3的矩阵
//一共6个参数
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
文字操作
ctx.textAlign //left right center

// Show the different textAlign values
ctx.textAlign="start"; 
ctx.fillText("textAlign=start",150,60); 
ctx.textAlign="end"; 
ctx.fillText("textAlign=end",150,80); 
ctx.textAlign="left"; 
ctx.fillText("textAlign=left",150,100);
ctx.textAlign="center"; 
ctx.fillText("textAlign=center",150,120); 
ctx.textAlign="right"; 
ctx.fillText("textAlign=right",150,140);
//横坐标都在150 textAlign让文本分立在左右两侧了
//原理是后面那个坐标是作为开始点结束点还是中点

ctx.textBaseLine
//alphabetic top hanging middle ideographic bottom
//根据不同的线决定文字的位置
//Place each word at y=100 with different textBaseline values
ctx.textBaseline="top"; 
ctx.fillText("Top",5,100); 
ctx.textBaseline="bottom"; 
ctx.fillText("Bottom",50,100); 
ctx.textBaseline="middle"; 
ctx.fillText("Middle",120,100); 
ctx.textBaseline="alphabetic"; 
ctx.fillText("Alphabetic",190,100); 
ctx.textBaseline="hanging"; 
ctx.fillText("Hanging",290,100);
//和五线谱差不多

ctx.measureText(txt) //测量文本 
.width 得到文本的宽度 px

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>